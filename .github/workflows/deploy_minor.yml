name: deploy_minor
on:
  workflow_dispatch:
env:
  MINORVERSION: ''
  FULLVERSION: ''
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get Version
      id: get_version
      uses: battila7/get-version-action@v2

    - name: Get minor version from release branch
      run: echo "MINORVERSION=2.5" >> $GITHUB_ENV
      env: 
        GITHUB_BRANCH: ${{ steps.get_version.outputs.major }}
        GITHUB_BRANCH_MINOR: ${{ steps.get_version.outputs.minor }}
    - name: Get full version from release branch
      run: echo "FULLVERSION=2.5.1" >> $GITHUB_ENV
      env: 
        GITHUB_BRANCH: ${{ steps.get_version.outputs.version-without-v }}
    - name: Display version minor install
      run: echo "Installing minor version ${MINORVERSION}"
    - name: Display version full install
      run: echo "Installing full version ${FULLVERSION}"

    - run: npm install
    - run: npm rebuild
    - run: npm run-script build
    - name: Configure AWS Credentials (DEPRECIATED)
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.CDN_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.CDN_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Deploy toolbox to CDN BRAND S3 bucket for minor version if not prelease (DEPRECIATED)
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: aws s3 sync ./dist/ s3://cdn.brand.illinois.edu/toolkit/$MINORVERSION --delete --acl bucket-owner-full-control
    - name: Build examples for minor version if not prelease (DEPRECIATED)
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: npm run-script create-test-html -- --pathprefix='/toolkit/$MINORVERSION/examples/'
    - name: Deploy examples to CDN BRAND S3 bucket for minor version if not prelease (DEPRECIATED)
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: aws s3 sync ./var/full-site-deploy/ s3://cdn.brand.illinois.edu/toolkit/$MINORVERSION/examples --delete --acl bucket-owner-full-control
    - name: Deploy static images in examples to CDN BRAND S3 bucket for minor version if not prelease (DEPRECIATED)
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: aws s3 sync ./tests/_reference/ s3://cdn.brand.illinois.edu/toolkit/$MINORVERSION/examples/static-images --acl bucket-owner-full-control
    - name: Invalidate Cloudfront cache for minor version if not prelease (DEPRECIATED)
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: aws cloudfront create-invalidation --distribution-id E2VPGHCUOM84HO --paths "/toolkit/$MINORVERSION*"

    - name: Deploy toolbox to CDN BRAND S3 bucket for full version (DEPRECIATED)
      run: aws s3 sync ./dist/ s3://cdn.brand.illinois.edu/toolkit/$FULLVERSION --delete --acl bucket-owner-full-control
    - name: Build examples for full version (DEPRECIATED)
      run: npm run-script create-test-html -- --pathprefix='/toolkit/$FULLVERSION/examples/'
    - name: Deploy examples to CDN BRAND S3 bucket for full version (DEPRECIATED)
      run: aws s3 sync ./var/full-site-deploy/ s3://cdn.brand.illinois.edu/toolkit/$FULLVERSION/examples --delete --acl bucket-owner-full-control
    - name: Deploy static images in examples to S3 bucket for full version (DEPRECIATED)
      run: aws s3 sync ./tests/_reference/ s3://cdn.brand.illinois.edu/toolkit/$FULLVERSION/examples/static-images --acl bucket-owner-full-control
    - name: Invalidate Cloudfront cache for full version (DEPRECIATED)
      run: aws cloudfront create-invalidation --distribution-id E2VPGHCUOM84HO --paths "/toolkit/$FULLVERSION*"
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: 'AKIAWXY7DGWYB5GTWUX5'
        aws-secret-access-key: ${{ secrets.AWS_TOOLKIT_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Deploy toolbox to S3 bucket for minor version if not prelease
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: aws s3 sync ./dist/ s3://s3robust-cdn.toolkit.illinois.edu/content/$MINORVERSION --delete --acl bucket-owner-full-control
    - name: Build examples for minor version if not prelease
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: npm run-script create-test-html -- --pathprefix='/$MINORVERSION/examples/'
    - name: Deploy examples to S3 bucket for minor version if not prelease
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: aws s3 sync ./var/full-site-deploy/ s3://s3robust-cdn.toolkit.illinois.edu/content/$MINORVERSION/examples --delete --acl bucket-owner-full-control
    - name: Deploy static images in examples to S3 bucket for minor version if not prelease
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: aws s3 sync ./tests/_reference/ s3://s3robust-cdn.toolkit.illinois.edu/content/$MINORVERSION/examples/static-images --acl bucket-owner-full-control
    - name: Invalidate Cloudfront cache for minor version if not prelease
      if: ${{ steps.get_version.outputs.prerelease == '' }}
      run: aws cloudfront create-invalidation --distribution-id E27YR2HDBZBKRX --paths "/$MINORVERSION*"

    - name: Deploy toolbox to S3 bucket for full version
      run: aws s3 sync ./dist/ s3://s3robust-cdn.toolkit.illinois.edu/content/$FULLVERSION --delete --acl bucket-owner-full-control
    - name: Build examples for full version
      run: npm run-script create-test-html -- --pathprefix='/$FULLVERSION/examples/'
    - name: Deploy examples to S3 bucket for full version
      run: aws s3 sync ./var/full-site-deploy/ s3://s3robust-cdn.toolkit.illinois.edu/content/$FULLVERSION/examples --delete --acl bucket-owner-full-control
    - name: Deploy static images in examples to S3 bucket for full version
      run: aws s3 sync ./tests/_reference/ s3://s3robust-cdn.toolkit.illinois.edu/content/$FULLVERSION/examples/static-images --acl bucket-owner-full-control
    - name: Invalidate Cloudfront cache for full version
      run: aws cloudfront create-invalidation --distribution-id E27YR2HDBZBKRX --paths "/$FULLVERSION*"
